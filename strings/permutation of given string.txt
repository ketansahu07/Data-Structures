//https://practice.geeksforgeeks.org/problems/permutations-of-a-given-string/0/
//this uses backtracking

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

void permute(string s,vector<string> &v, int l, int r)
{
    if(l==r)
    {
        v.push_back(s);
    }
    else
    {
        for(int i=l;i<=r;i++)
        {
            swap(s[l],s[i]);
            
            permute(s,v,l+1,r);
            
            swap(s[l],s[i]);
        }
    }
}

int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    string s;
	    cin>>s;
	    vector<string> v;
	    permute(s,v,0,s.length()-1);
	    sort(v.begin(),v.end());
	    for(int i=0;i<v.size();i++)
	        cout<<v[i]<<" ";
	    cout<<endl;
	}
	return 0;
}