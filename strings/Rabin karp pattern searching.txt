//https://practice.geeksforgeeks.org/problems/rabin-karp-pattern-searching/1/?track=SPC-Strings&batchId=154

// d is the number of characters in the input alphabet 
#define d 256 

/* pat -> pattern 
	txt -> text 
	q -> A prime number 
*/
bool search(string pat, string txt, int q) 
{ 
    int n=txt.length();
    int m=pat.length();
	
	int h=1;
	for(int i=1;i<m;i++)
	    h=(h*d)%q;
	    
    int p=0,t=0;
    for(int i=0;i<m;i++)    //hornors method of multiplication
    {
        p=(p*d+pat[i])%q;
        t=(t*d+txt[i])%q;
    }
    
    for(int i=0;i<n;i++)
    {
        if(p==t)
        {
            bool flag = true;
            for(int j=0;j<m;j++)
            {
                if(txt[i+j]!=pat[j])
                {
                    flag=false;
                    break;
                }
            }
            if(flag==true)
                return true;
        }
        if(i<n-m)
        {
            t=(d*(t-txt[i]*h)+txt[i+m])%q;
            if(t<0)
                t=t+q;
        }
    }
    return false;
} 