#include<bits/stdc++.h>
using namespace std;

struct node{
    int data;
    node* left;
    node* right;
    node(int d)
    {
        data = d;
        left = right = NULL;
    }
};

node* insertNode(int data, node* root)
{
    if(!root) return new node(data);

    if(data<root->data)
        root->left = insertNode(data, root->left);
    else
        root->right = insertNode(data, root->right);
}

int searchh(int pr[],int s, int e, int key)
{
    for(int i=s;i<=e;i++)
    {
        if(pr[i]>key)
            return i;
    }
}

void printPostorder(int pr[],int *preindex, int low, int high, int n)
{
    if(*preindex==n)
        return;

    if(pr[*preindex]<low || pr[*preindex]>high)
        return;

    int val = pr[*preindex];
    *preindex=*preindex+1;

    printPostorder(pr,preindex,low,val,n);
    printPostorder(pr,preindex,val,high,n);

    cout<<val<<" ";
}

int main()
{
    int pr[] = { 40, 30, 35, 80, 100 };
    int n = sizeof(pr)/sizeof(pr[0]);
    int preindex = 0;
    printPostorder(pr,&preindex,INT_MIN,INT_MAX,n);
    return 0;
}
