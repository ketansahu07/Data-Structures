
===================================================================================
kth largest element
//https://practice.geeksforgeeks.org/problems/kth-largest-element5034/1/?track=SPC-Heap&batchId=154
===================================================================================
int KthLargest(int arr[], int n, int k){
    priority_queue<int> pq(arr,arr+n);
    while(k--)
    {
        if(k==0)
            return pq.top();
        pq.pop();
    }
}

===================================================================================
kth smallest element
//https://practice.geeksforgeeks.org/problems/kth-smallest-element5545/1/?track=SPC-Heap&batchId=154
=================================================================================== 
int kthSmallest(int arr[], int n, int k){
    priority_queue<int, vector<int>, greater<int>> pq(arr,arr+n);
    while(--k)
        pq.pop();
    
    return pq.top();
}
