// https://practice.geeksforgeeks.org/problems/bipartite-graph/1

bool isBipartite(int G[][MAX],int V)
{
    int color[V];       // this will also work as visited array
    for(int i=0;i<V;i++)
        color[i]=-1;
    
    queue<int> q;
    for(int i=0;i<V;i++)  // in case graph is disconnected it will handel it
    {
        if(color[i]==-1){
            q.push(i);
            color[i]=1;
            while(!q.empty())
            {
                int u = q.front();
                q.pop();
                if(G[u][u]==1)  // if the graph has self loop then not bipartite
                    return false;
                
                for(int v=0;v<V;v++)
                {
                    if(G[u][v] && color[v]==-1)
                    {
                        color[v] = 1-color[u];
                        q.push(v);
                    }
                    else if(G[u][v] && color[v]==color[u])
                        return false;
                }
            }
        }
    }
    return true;
}