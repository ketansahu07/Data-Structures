//there's one slight difference that the city once visited, if visited again does not cost anything

#include <bits/stdc++.h>
using namespace std;



vector<vector<int>>prices;


long long minCostOfGasoline(int n)
{
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
    
    vector<int> price(n,INT_MAX);
    vector<bool>inMST(n,false);
    
    price[0]=0;
    
    pq.push({0,0});
    
    while(!pq.empty())
    {
        pair<int,int>temp=pq.top();
        pq.pop();
        
        int u = temp.second;
        inMST[u]=true;
        for(int i=0;i<n;i++)
        {
            int currPrice=prices[u][i];
            int currCity=i;
            if(!inMST[currCity] && currPrice<price[i] &&currPrice!=-1&&currPrice!=0)
            {
                price[i]=currPrice;
                pq.push({currPrice,i});
            }
        }
        
    }
    
    long long sum=0;
    for(auto x:price)
    sum+=x;
    
    return sum;
}

int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    
	    int n;
	    cin>>n;
	    
	    for(int i=0;i<n;i++)
	    {
	        vector<int>temp;
	        
	        for(int j=0;j<n;j++)
	        {
	            int x;
	            cin>>x;
	            
	            temp.push_back(x);
	        }
	        prices.push_back(temp);
	    }
	    
	    
	    cout<<minCostOfGasoline(n)<<endl;
	    
	   prices.clear(); 
	}
	return 0;
}