// https://www.geeksforgeeks.org/efficiently-merging-two-sorted-arrays-with-o1-extra-space/
// https://practice.geeksforgeeks.org/problems/merge-two-sorted-arrays/0/
// here we sort two array as if they are one single array using a vairable gap that when exceed one array we go to another // array

#include <bits/stdc++.h>
using namespace std;

int nextgap(int gap)
{
    if(gap<=1)
    return 0;
    
    return (gap/2) + (gap%2);
}

void merge(int a[], int b[], int n, int m)
{
    int i, j, gap=n+m;
    for(gap=nextgap(gap);gap>0;gap=nextgap(gap))
    {
        for(i=0;i+gap<n;i++)
            if(a[i]>a[i+gap])
                swap(a[i],a[i+gap]);
        
        for(j=gap>n?gap-n:0;i<n && j<m; i++,j++)
            if(a[i]>b[j])
                swap(a[i],b[j]);
        
        if(j<m)
        {
            for(j=0;j+gap<m;j++)
                if(b[j]>b[j+gap])
                    swap(b[j],b[j+gap]);
        }
    }
}

int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n,m;
	    cin>>n>>m;
	    int a[n],b[m];
	    for(int i=0;i<n;i++)
	    cin>>a[i];
	    for(int i=0;i<m;i++)
	    cin>>b[i];
	    merge(a,b,n,m);
	    for(int i=0;i<n;i++)
	    cout<<a[i]<<" ";
	    for(int i=0;i<m;i++)
	    cout<<b[i]<<" ";
	    cout<<endl;
	}
	return 0;
}