#include <bits/stdc++.h>
using namespace std;
typedef struct linkedList* node;

struct linkedList{
    int data;
    node next;
};

node createNode()
{
    node temp;
    temp=(node)malloc(sizeof(struct linkedList));
    temp->next=NULL;
    return temp;
}

node addNode(node head, int value)
{
    node temp,p;
    temp = createNode();
    temp->data=value;
    if(head==NULL)
    {
        head=temp;
    }
    else
    {
        p=head;
        while(p->next!=NULL)
           { 
               p=p->next;
           }
        
        p->next=temp;
    }
    return head;
}

void display(node head)
{
    node p=head;
    while(p!=NULL)
    {
        cout<<p->data<<" ";
        p=p->next;
    }
}

node reversell(node head)
{
    node previous=NULL;
    node current=head;
    node future=NULL;
    while(current!=NULL)
    {
        future=current->next;
        current->next=previous;
        previous=current;
        current=future;
    }
    head=previous;
    return head;
}

node reverseKth(node head, int k)
{
    node past=NULL;
    node current=head;
    node future=NULL;
    int count=0;
    while(current!=NULL && count<k)
    {
        future=current->next;
        current->next=past;
        past=current;
        current=future;
        count++;
    }
    
    if(current!=NULL)
    current=reverseKth(current,k);

    if(head!=NULL)
        head->next=current;
    
    return past;
}

int main()
{
    int n;
    cin>>n;
    node head=NULL;
    while(n--)
    {
        head=addNode(head,n);
    }
    display(head);
    head=reversell(head);
    cout<<endl;
    display(head);
    cout<<endl;
    head=reverseKth(head,3);
    display(head);
    free(head);
    return 0;
}