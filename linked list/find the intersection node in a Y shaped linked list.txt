int intersectPoint(Node* head1, Node* head2)
{
    if(!head1 || !head2) return -1;
    
    Node* temp = head1;
    int x=0,y=0;
    while(temp)
    {
        x++;
        temp = temp->next;
    }
    
    temp = head2;
    while(temp)
    {
        y++;
        temp = temp->next;
    }
    
    int d = abs(x-y);
    if(x>y) temp = head1;
    else temp = head2;
    while(d--)
    {
        temp = temp->next;
    }
    Node* temp2 = NULL;
    if(x<y) temp2 = head1;
    else temp2 = head2;
    while(temp && temp2)
    {
        if(temp == temp2)
        return temp->data;
        
        temp = temp->next;
        temp2 = temp2->next;
    }
    
    return -1;
}

// Using hash map is an another way (better)
// Modified linked list with an flag as one more member variable to marked the visited node.
// https://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/